generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String?
  email     String    @unique
  password  String
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  chats     Chat[]
}

model Chat {
  id              String    @id @default(uuid())
  title           String    @default("Nowa konwersacja")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id])
  userId          String
  messages        Message[]
  documents       Document[] 
  activeDocuments String[]  // Lista ID aktywnych dokumentów
  uploadedDocuments String[] // Lista ID wszystkich wgranych dokumentów (nowe pole)
}

model Message {
  id        String   @id @default(uuid())
  content   String
  role      String   // "user" lub "assistant"
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
}

model Document {
  id         String   @id @default(uuid())
  title      String
  fileType   String
  content    String?  @db.Text
  pages      Int?
  rows       Int?
  columns    Int?
  metadata   Json?    @default("{}")
  createdAt  DateTime @default(now())
  chat       Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId     String   
  isDefault  Boolean  @default(false) // Dla wstecznej kompatybilności

  @@index([chatId])
}

model KnowledgeCategory {
  id           String              @id @default(uuid())
  name         String
  parentId     String?
  parent       KnowledgeCategory?  @relation("SubCategories", fields: [parentId], references: [id])
  subCategories KnowledgeCategory[] @relation("SubCategories")
  documents    KnowledgeDocument[]
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
}

model KnowledgeDocument {
  id          String             @id @default(uuid())
  title       String
  fileType    String             // "pdf", "excel", "doc", itp.
  content     String             @db.Text  // Treść dokumentu
  categoryId  String
  category    KnowledgeCategory  @relation(fields: [categoryId], references: [id])
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}